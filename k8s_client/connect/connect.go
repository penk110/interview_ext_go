package main

import (
	"context"
	"encoding/base64"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/client-go/kubernetes"
	"k8s.io/client-go/rest"
	"log"
)

// 虚拟机集群
const (
	CA        = `LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EUXpNREExTWpJME1Wb1hEVE15TURReU56QTFNakkwTVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTk03Ck1tTmNUTE93ZW13dDN2UEhyeTUxMmVZdWsvazdBOExHWER3Q3ptVEI0T2pRVFVCWXZtOTlLcCt0VUlOTEVJdGYKTWg2WHpBckJlR0VKa2pRQnhTellZRUVrWHlmQVhadkZTT245TEl4OFJIUEtaTFMrNDhnc2hBZDYrajZYeXVIOQptdGxndDdtNlRGa096S3Z1Y0xDZHZCWTh5ZHFoV09wZlFGdmNXSDdzTllpNHRNV05FbWJRVFkvNStBbDI2ZVViClkweHZmMWsyS0N5c25jc3h3Yy9FT0orajlvZzBnaUNaVEtHQ3NEQ1BCUHZ3UjRnNnVSd1BlV0Z0em05c3BQMnUKZnBrQy9ubU92ckl4Sm1oVU1wTU5WOCtqUGpSeWNVRHVaUkR5c2tSRW1id3RSVFp2S0xsZXpXQ2svVUY1a2lidApPVlY2eHdNUnpIVUpHOTVNV0hrQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOU1l0UUorYm82TmlJYXZ1cnQ1YnQwaWNidlhNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTFYzM1dpRjdvRjgrcStDSjNkcQpDTG1sdEpVNzFYNTNsV1RlY2Jzci9ITWdMVlFRREVBOUdVc2xYTG1Ra05GMHlldTI5cjFuOXFhemlNdlVPNkg2CjNIVUtndlZjdkJpTkxKU0ZubkdEMUpkVk52NElzU3hlSHY1ZG5PWVpLMHdYMUpLRzJyN1dwTmRITHJyTmhHSTcKRDJrMDY4blpyOWM4Um53QkJtTjNwZFRFeEhRalVVbG5Sb2NKYWhBSXBIOW51a242V0crWHdNdkhsNHhrNHNPNQpRM1h0WlVRUVUxcnFWMUVIZ2dvMGRZMHdtNHo2SkV3dGZ3WVpNN0UwVU1lc0NPZ202UU1LdjBja0ZGQ3FlR2FGCnpvRTNMNlZFZFhRazdlbWVmbERLRnBEd0wvaVoya3BBNjFIUXBJeTdXRlh0Q1dwVjg3eXpSRDBFcUthU0hSdW4KNzNvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==`
	ClientCA  = `LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lJYVE4cmN0TFE0WWt3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TWpBME16QXdOVEl5TkRGYUZ3MHlNekEwTXpBd05USXlORE5hTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZPc1ZYcjFHbVBXNG5qOUgKRGpiWTNTMUNSSEJyeHpDbnRLSGZEd01lZFAvbDVqN0NHMHhodEdPZGRRSzBTRjk4T1FsQVBZUTZmUkNWZG83bQpLSkVzcnc1Y0VDZGd4d1pOUEpaZzRDS3pOTUt5YUtSczM3NlQ1eFpWckl3NVprS1doOWtpQ1o1N3g2NTVEcEE3Cjh4VjNRRjVCdUFMdjRya0gyYWVHU2ZCdERjUnpSVGgvRzVoUlFiazQzTWlpRUNlRkFjd1c4YnZtV0NGaEVpQisKR0pNeWFLeTMzOVZsbUp0blVDZDJTbytmNGNjMm9CSkJaZ29GTlFEaEkyekdMd3JVNERxZUFMa1pFSStqRXhDbwpsK3VMNlRSS2tnUXlkMHFZdElvZ0FOSGl6OEdMMzAwVW1VdHk3Vlg3WEVlcnZqRk5aVEU0OTBRZDA2cnc2VmJjCjlIbzVod0lEQVFBQm8xWXdWREFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUVW1MVUNmbTZPallpR3I3cTdlVzdkSW5HNwoxekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUjY1NGo2SlppYTFZWUZ1N3hBZ3BuWEQ2a0MvODBpWjRTcHZQCjlGSjlmZHBRSFprR05pT1ZxRmY3dDhMSXc2WjcvdGNkdTZFeHhLMmJHTTRyWXlFT0FFUVI4U0lVL2FOdUJmQTEKRU40SmxIWGZHeVg2aW83bWhYTEV1T050U0FWN3dRcmpCT25INVVPVjE5dWZtc0plRC82RUdmU0NJMGZEemZ2Ygozbi82MWlQTlM5YkgzeDl1MEJXWUxHNWk1VUJXeUxzZzN3UHRpVWlZNDNMWDkxOE1ZL0htQTIwN2YzdmF4VW4rCjFEWGh2cXJTbVFRYW8vQUJtUnh6cUFOT0FEZnJWRHRyT0dwKzFFQTB5c0J0ajRMWWJ2OXdtbFp5UVVjSUlxUVkKMHpDc1VoZDhHV0VtR2N0ZTlxV2J0bjlkbXlwalRybC9kQXZzSE5tN1NWbWhxaTZrbGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==`
	ClientKey = `LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdk9zVlhyMUdtUFc0bmo5SERqYlkzUzFDUkhCcnh6Q250S0hmRHdNZWRQL2w1ajdDCkcweGh0R09kZFFLMFNGOThPUWxBUFlRNmZSQ1ZkbzdtS0pFc3J3NWNFQ2RneHdaTlBKWmc0Q0t6Tk1LeWFLUnMKMzc2VDV4WlZySXc1WmtLV2g5a2lDWjU3eDY1NURwQTc4eFYzUUY1QnVBTHY0cmtIMmFlR1NmQnREY1J6UlRoLwpHNWhSUWJrNDNNaWlFQ2VGQWN3Vzhidm1XQ0ZoRWlCK0dKTXlhS3kzMzlWbG1KdG5VQ2QyU28rZjRjYzJvQkpCClpnb0ZOUURoSTJ6R0x3clU0RHFlQUxrWkVJK2pFeENvbCt1TDZUUktrZ1F5ZDBxWXRJb2dBTkhpejhHTDMwMFUKbVV0eTdWWDdYRWVydmpGTlpURTQ5MFFkMDZydzZWYmM5SG81aHdJREFRQUJBb0lCQUNPZTI3K3FScFp1dG1tNApHcWkyZEx0M1hpaFRYaThIb0lkeGdnSnRueCtHWkkyK1JaRXFITDRMamxQU3Q3VnhzNVY1aGhCVFQwZm5pWmI2CktMRjdkZ1puMmJuK0FzUmtEc29ldkpObVY0M2FMQk9JOVRKVzE4Slp0cnU3RU5PVU9KZlN2QlUrT2E2VDJpV0IKMHB2cDd6dEd5bk5zc2xoNGROOTRNOXpiSldUVDB6TCtkazFuL05XdldFT24rNzZDQTZucTJxNU1CVFczelVGagpTNW5uUVUzR0tib1BCMHYrMHE1by8zeXFqYVFQS21oU2dPUWZJbnZPN2tyMUtnUVFYRWFmWksyaDBUOGxueWRSCmRVNlJCRDgyYVBMbWxXYm9GUFN5TDU2bHQxbjM2OEcyR29GS2h1K1ZLRUJlOGFEZm8xckVvc3k1WlgrbnpYTnAKWVgzdjNORUNnWUVBK0I1alRZeWNWRnZwcjlZYlJ3QUV5UDd1UHhmOUNOTzgrQlFWSjlwN2R4bUhsVmhFNzZEUApXVmJQc3NuRTNPaDZhZEM3VzFBbTI3emxyRzhjWjJzV0VMMk0vRHBFbCtDQnlDTlN1V01CcmIxZVU4YkZRU0NYCnlZTmZOcTVXbkNpeFdjL2RuT3dTMGZ3NXREZGtEekdNaC9rZS9tWE04UnFIcEFCc2RSR28rN2tDZ1lFQXd1dE0KbEZ4VFEzekFSSk83N3FRS0U5K1ljeFIydDl2cjI4SzRXRVRKaXBwV2ppWllMNkliN09KVk43WXpHMWNCeTNsVApCVENDRngxMTl3ZzZvM3FoZjFyNUk2RDlEWXZQL084d3pCZEN4TFNON1h4TmxWaFRPVlJ5Ry9VL2dlamxjUHhHCmJERDF2OTY3aUc3aTNhQVNGdzgzd1pnY2t4c0UvVCtlcXB2Zi96OENnWUE4OFRIUTNXV1VidEx5Sm5PaXQ4VjEKSFBDbHZKMmc2bWp5d2ZRRVN1eWliem5YRzh3cTAyTzZmTkVkQitQN29ucFd2VGNYa1pOSnk1YmFDSnlBWmxRUQpIbzZmY1N4aDVYbmJENW9GQU9WcnFDU2dEU1ZyL3JacGY0UUdhVUhLcjFBSVVEOE5pUXFDV3lKTk9vR3dIYXAzCngxK3VlcENnODdRM093ZG9wY0xNdVFLQmdEbWpBRk1DZGZDSHpBYTdOS0FkUzRtUzNXNXlCNlRZV0FiMHJqUVQKcXhEY0VHb2FOb3RuUVNDcjBJMFh5RWIyVkdhSmFwNG5PT0NDNnFYd2ZmNW5QYWYrQzV1WWVCdHdVMEUwclZZOApMcGNoMkxIM3hxMDVuK3BjNlIwUlNRVXVDK0o4Qm9ycGMxR1lHQllBeS83QzNYYUtIbStWZmlXVm9NVU44ZW43CkM2SmJBb0dCQU0wRUxIOGdyeHJxSUN3TmM1aVNkRFU5TU56NndzcTVlZFQwSVRCVVBUekFVY0grQ3o5bjRoUGIKd1o3NG5MNFpUSmNGVjFoU3VsRDVCT3Q0MytCNUZDeklkS0FEUTFic2Vwaldzc0tLUmJWL0dJT3c3UlE1ZHMvTApGZTc0ektyUUw4ZWlvTG5pTFJqQktKeE80SU9VQllpeHFzWnhKT2RKa0hrRU40SndScE9FCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==`
)

func main() {

	caData, _ := base64.StdEncoding.DecodeString(CA)
	keyData, _ := base64.StdEncoding.DecodeString(ClientKey)
	certData, _ := base64.StdEncoding.DecodeString(ClientCA)

	tlsConfig := rest.TLSClientConfig{
		Insecure: false,
		CertData: certData,
		KeyData:  keyData,
		CAData:   caData,
	}
	config := &rest.Config{
		Host:                "https://192.168.3.11:6443",
		APIPath:             "",
		ContentConfig:       rest.ContentConfig{},
		Username:            "",
		Password:            "",
		BearerToken:         "",
		BearerTokenFile:     "",
		Impersonate:         rest.ImpersonationConfig{},
		AuthProvider:        nil,
		AuthConfigPersister: nil,
		ExecProvider:        nil,
		TLSClientConfig:     tlsConfig,
	}

	clientSet, err := kubernetes.NewForConfig(config)
	if err != nil {
		log.Fatal(err.Error())
	}

	ctx := context.Background()
	listOption := v1.ListOptions{}

	pods, err := clientSet.CoreV1().Pods("kube-system").List(ctx, listOption)
	if err != nil {
		log.Fatal(err.Error())
	}

	for _, pod := range pods.Items {
		log.Printf("podName: %s\n", pod.Name)
	}

}
